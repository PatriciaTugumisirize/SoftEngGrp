const App=(()=>{const API_BASE="http://localhost:5000";
async function fetchJSON(path,opts={}){const res=await fetch(API_BASE+path,opts);if(!res.ok)throw new Error(`HTTP ${res.status} - ${await res.text()}`);const ct=res.headers.get("content-type")||"";return ct.includes("application/json")?res.json():res.text()}
function escapeHTML(s){return s.replace(/[&<>'"]/g,m=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"}[m]))}
function showMessage(msg,isError){const el=document.querySelector("#message");if(el){el.textContent=msg;el.style.color=isError?"red":"green"}}
async function loadOpportunities({search="",orgId=""}={}){try{const data=await fetchJSON(`/api/opportunities?search=${encodeURIComponent(search)}&orgId=${encodeURIComponent(orgId)}`);const list=document.querySelector("#opportunity-list");if(list)list.innerHTML=data.map(renderOpportunity).join("")}catch(e){showMessage(e.message,true)}}
function renderOpportunity(opp){return`<div class="opp-card"><h3>${escapeHTML(opp.title)}</h3><p>${escapeHTML(opp.description)}</p><span>${escapeHTML(opp.organization)}</span></div>`}
async function submitForm(e){e.preventDefault();const form=e.target;const body={title:form.title.value,description:form.description.value,organization:form.organization.value};try{await fetchJSON("/api/opportunities",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(body)});showMessage("Opportunity added successfully!");form.reset()}catch(err){showMessage(err.message,true)}}
return{initListPage:()=>{document.querySelector("#search-btn")?.addEventListener("click",()=>{const search=document.querySelector("#search").value;loadOpportunities({search})});loadOpportunities();},initFormPage:()=>{document.querySelector("#opportunity-form")?.addEventListener("submit",submitForm);}}})();
